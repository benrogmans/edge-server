name: Deploy edge Server

on:
  push:
    branches: [ staging, production ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/edge-server
  FLATCAR_URL: https://stable.release.flatcar-linux.net/amd64-usr/current/flatcar_production_iso_image.iso
  ENVIRONMENT: ${{ github.ref_name }}
  DATE_TAG: ${{ github.ref_name }}-build-${{ github.run_id }}
  COSIGN_EXPERIMENTAL: "1"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: "27.1.2"
          gleam-version: "1.9.1"
          rebar3-version: "3"
          # elixir-version: "1"
      - run: gleam deps download
      - run: gleam test
      - run: gleam format --check src test
  
  docker:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
      packages: write
      id-token: write

    outputs:
      body: ${{ steps.changelog.outputs.body }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          docker build -t $IMAGE_NAME:$SHORT_SHA .
          docker tag $IMAGE_NAME:$SHORT_SHA $IMAGE_NAME:$ENVIRONMENT
          docker tag $IMAGE_NAME:$SHORT_SHA $IMAGE_NAME:latest
          docker tag $IMAGE_NAME:$SHORT_SHA $IMAGE_NAME:${DATE_TAG}
          docker push $IMAGE_NAME:$SHORT_SHA
          docker push $IMAGE_NAME:$ENVIRONMENT
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${DATE_TAG}

      - name: Install Cosign
        run: |
          curl -Lo cosign https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64
          chmod +x cosign
          sudo mv cosign /usr/local/bin/cosign

      - name: Sign Docker images (keyless)
        run: |
          for tag in $SHORT_SHA $ENVIRONMENT latest ${DATE_TAG}; do
            cosign sign $IMAGE_NAME:$tag
          done

      - name: Collect commit messages
        id: changelog
        run: |
          LOG=$(git log -10 --pretty=format:"- %h %s" origin/${{ github.ref_name }}..HEAD || git log -5 --pretty=format:"- %h %s")
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$LOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  ignition-and-iso:
    needs: docker
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write

    env:
      DOCKER_CHANGELOG: ${{ needs.docker.outputs.body }}
      COSIGN_EXPERIMENTAL: "1"

    steps:
      - uses: actions/checkout@v3

      - name: Install Butane, coreos-installer, cosign
        run: |
          curl -Lo /usr/local/bin/butane https://github.com/coreos/butane/releases/latest/download/butane-x86_64-unknown-linux-gnu
          chmod +x /usr/local/bin/butane
          curl -Lo /usr/local/bin/coreos-installer https://github.com/coreos/coreos-installer/releases/latest/download/coreos-installer-x86_64-unknown-linux-gnu
          chmod +x /usr/local/bin/coreos-installer
          curl -Lo cosign https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64
          chmod +x cosign
          sudo mv cosign /usr/local/bin/cosign

      - name: Render Ignition config
        env:
          ERLANG_COOKIE: ${{ secrets.ERLANG_COOKIE }}
          GHCR_USERNAME: ${{ github.repository_owner }}
          NETMAKER_TOKEN: ${{ secrets.NETMAKER_TOKEN }}
          NETMAKER_SERVER: https://netmaker.example.com
          ENVIRONMENT: ${{ github.ref_name }}
        run: |
          mkdir -p artifacts
          envsubst < flatcar.yml > ignition.yml
          butane ignition.yml > artifacts/edge-server-${ENVIRONMENT}.ign

      - name: Download previous ignition file
        id: download_previous
        continue-on-error: true
        run: |
          mkdir -p previous
          gh release download --repo ${{ github.repository }} --pattern "edge-server-${ENVIRONMENT}.ign" --dir previous || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Compare ignition config
        id: compare_ign
        run: |
          new_sum=$(sha256sum artifacts/edge-server-${ENVIRONMENT}.ign | cut -d ' ' -f1)
          old_sum=$(sha256sum previous/edge-server-${ENVIRONMENT}.ign 2>/dev/null | cut -d ' ' -f1 || echo none)
          echo "ign_changed=$([ "$new_sum" != "$old_sum" ] && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: Download Flatcar ISO
        if: steps.compare_ign.outputs.ign_changed == 'true'
        run: curl -Lo flatcar.iso $FLATCAR_URL

      - name: Embed Ignition into ISO
        if: steps.compare_ign.outputs.ign_changed == 'true'
        run: |
          coreos-installer iso ignition embed \
            -i artifacts/edge-server-${ENVIRONMENT}.ign \
            -o artifacts/edge-server-${ENVIRONMENT}.iso flatcar.iso

      - name: Sign ISO (keyless)
        if: steps.compare_ign.outputs.ign_changed == 'true'
        run: |
          cosign sign-blob --yes --output-signature artifacts/edge-server-${ENVIRONMENT}.iso.sig artifacts/edge-server-${ENVIRONMENT}.iso

      - name: Upload to GitHub Release (latest)
        if: steps.compare_ign.outputs.ign_changed == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          name: "edge Deploy ${{ env.ENVIRONMENT }} (latest)"
          body: ${{ env.DOCKER_CHANGELOG }}
          files: |
            artifacts/edge-server-${ENVIRONMENT}.ign
            artifacts/edge-server-${ENVIRONMENT}.iso
            artifacts/edge-server-${ENVIRONMENT}.iso.sig
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to GitHub Release (versioned)
        if: steps.compare_ign.outputs.ign_changed == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.DATE_TAG }}
          name: "edge Deploy ${{ env.ENVIRONMENT }} - ${{ env.DATE_TAG }}"
          body: ${{ env.DOCKER_CHANGELOG }}
          files: |
            artifacts/edge-server-${ENVIRONMENT}.ign
            artifacts/edge-server-${ENVIRONMENT}.iso
            artifacts/edge-server-${ENVIRONMENT}.iso.sig
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
